(function() {
  var Butchershop, mocha, should;

  mocha = require("mocha");

  should = require("should");

  Butchershop = require("../index");

  describe("Butchershop", function() {
    describe("#constructor()", function() {
      it("should not require any user config", function() {
        return new Butchershop().should.be.ok;
      });
      it("should set default local-server properties", function() {
        var butcher;

        butcher = new Butchershop();
        butcher.options.local.host.should.equal("localhost");
        return butcher.options.local.port.should.equal(8000);
      });
      return it("should set default proxy properties", function() {
        var butcher;

        butcher = new Butchershop();
        butcher.options.proxy.protocol.should.equal("http");
        butcher.options.proxy.host.should.equal("npmjs.org");
        return butcher.options.proxy.port.should.equal(80);
      });
    });
    return describe("#isFile", function() {
      var butcher, dir, file, path, _i, _j, _len, _len1, _ref, _ref1, _results;

      butcher = new Butchershop();
      path = {
        dirs: ['', '/', 'dir', '/dir', '/dir/', '/dir.name/name/'],
        files: ['/file.html', '/file.name.html', '/dir/file.html', '/dir/file.name.html', '/dir.name/name.html']
      };
      _ref = path.dirs;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        dir = _ref[_i];
        it("should detect that '" + dir + "' is a directory", function() {
          return butcher.isFile(dir).should.equal(false);
        });
      }
      _ref1 = path.files;
      _results = [];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        file = _ref1[_j];
        _results.push(it("should detect that '" + file + "' is a file", function() {
          return butcher.isFile(file).should.equal(true);
        }));
      }
      return _results;
    });
  });

}).call(this);
